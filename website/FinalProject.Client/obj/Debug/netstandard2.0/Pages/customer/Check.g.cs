#pragma checksum "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ec8b9dc68422065122cf366544e4e68cb28beae"
// <auto-generated/>
#pragma warning disable 1591
namespace FinalProject.Client.Pages.customer
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using FinalProject.Client;
    using FinalProject.Shared;
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/check/{myvalue}")]
    public class Check : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>Check Survey</h1>\n\n");
#line 9 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
 if (user == null)
{

#line default
#line hidden
            builder.AddContent(1, "    ");
            builder.AddMarkupContent(2, "<div class=\"progress\">\n        <div class=\"indeterminate\"></div>\n    </div>\n");
#line 14 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"

}
else
{
    

#line default
#line hidden
#line 18 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
     if (to)
    {

#line default
#line hidden
            builder.AddContent(3, "        ");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "class", "container");
            builder.AddContent(6, "\n            ");
            builder.OpenElement(7, "table");
            builder.AddAttribute(8, "class", "table");
            builder.AddContent(9, "\n                ");
            builder.AddMarkupContent(10, "<thead>\n                    <tr>\n                        <th>AppName</th>\n                        <th>Survey</th>\n                        <th>Value</th>\n\n\n                    </tr>\n                </thead>\n                ");
            builder.OpenElement(11, "tbody");
            builder.AddContent(12, "\n                    ");
            builder.OpenElement(13, "tr");
            builder.AddContent(14, "\n                        ");
            builder.OpenElement(15, "td");
            builder.AddContent(16, user.Appname);
            builder.CloseElement();
            builder.AddContent(17, "\n                        ");
            builder.OpenElement(18, "td");
            builder.AddContent(19, user.Surveyitems);
            builder.CloseElement();
            builder.AddContent(20, "\n                        ");
            builder.OpenElement(21, "td");
            builder.AddContent(22, user.money);
            builder.CloseElement();
            builder.AddContent(23, "\n\n                    ");
            builder.CloseElement();
            builder.AddContent(24, "\n                ");
            builder.CloseElement();
            builder.AddContent(25, "\n            ");
            builder.CloseElement();
            builder.AddContent(26, "\n            ");
            builder.OpenElement(27, "button");
            builder.AddAttribute(28, "class", "btn waves-effect waves-light");
            builder.AddAttribute(29, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(change));
            builder.AddContent(30, " See this survey");
            builder.CloseElement();
            builder.AddContent(31, "\n        ");
            builder.CloseElement();
            builder.AddContent(32, "\n");
#line 42 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
    }

#line default
#line hidden
#line 42 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
     
    if (from)
    {


#line default
#line hidden
            builder.AddContent(33, "        ");
            builder.OpenElement(34, "div");
            builder.AddAttribute(35, "class", "container");
            builder.AddContent(36, "\n            ");
            builder.OpenElement(37, "table");
            builder.AddAttribute(38, "class", "table");
            builder.AddContent(39, "\n                ");
            builder.AddMarkupContent(40, "<thead>\n                    <tr>\n                        <th>Survey Name</th>\n                        <th>Result</th>\n\n                    </tr>\n                </thead>\n                ");
            builder.OpenElement(41, "tbody");
            builder.AddContent(42, "\n\n");
#line 57 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
                     foreach (var use in items)
                    {
                        if (user.Survey)
                        {

#line default
#line hidden
            builder.AddContent(43, "                            ");
            builder.OpenElement(44, "tr");
            builder.AddContent(45, "\n                                ");
            builder.OpenElement(46, "td");
            builder.AddContent(47, use);
            builder.CloseElement();
            builder.AddContent(48, "\n                                ");
            builder.OpenElement(49, "td");
            builder.AddContent(50, newrand);
            builder.CloseElement();
            builder.AddContent(51, "\n                            ");
            builder.CloseElement();
            builder.AddContent(52, "\n");
#line 65 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"

                            Convert();
                        }
                    }

#line default
#line hidden
            builder.AddContent(53, "                ");
            builder.CloseElement();
            builder.AddContent(54, "\n            ");
            builder.CloseElement();
            builder.AddContent(55, "\n        ");
            builder.CloseElement();
            builder.AddContent(56, "\n");
#line 72 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
    }

#line default
#line hidden
            builder.AddContent(57, "    ");
            builder.OpenElement(58, "button");
            builder.AddAttribute(59, "class", "btn waves-effect waves-light");
            builder.AddAttribute(60, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(back));
            builder.AddContent(61, "Back");
            builder.CloseElement();
            builder.AddContent(62, "\n");
#line 74 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"

}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 80 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
 
    [Parameter]
    private String myvalue { get; set; }

    User user;
    User userok;
    Boolean to = true;
    Boolean from = false;
    String[] items;
    Random random = new Random();
    double newrand;
    protected override async Task OnInitAsync()
    {
        user = await Http.SendJsonAsync<User>(HttpMethod.Post, "/api/Login/getspeuser", myvalue);
        Console.WriteLine("!!!" + user.Survey);

    }
    public async void change()
    {
        int randint = random.Next(7, 8);

        newrand = (double)33 / randint;

        items = await Http.SendJsonAsync<String[]>(HttpMethod.Post, "/api/Login/getsurveylist", myvalue); ;
        to = false;
        from = true;

    }

    public void Convert()
    {

        int randint = random.Next(7, 19);

        newrand = (double)33 / randint;
    }
    public void back() {

        UriHelper.NavigateTo($"/login/{myvalue}");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591

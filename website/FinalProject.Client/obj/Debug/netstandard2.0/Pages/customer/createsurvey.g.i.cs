#pragma checksum "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\createsurvey.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ee22b018a19aee21d4979839422eb50519bb784a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FinalProject.Client.Pages.customer
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using FinalProject.Client;
    using FinalProject.Shared;
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/create/{myvalue}")]
    public class createsurvey : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 58 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\createsurvey.cshtml"
            

    public class TodoItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }
    IList<TodoItem> todos = new List<TodoItem>();

    public class EmailItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }
    IList<EmailItem> Emails = new List<EmailItem>();

    string newTodo;
    string newemail;
    string surveys;
    string emails;
    int count;
    User user;
    Boolean test;

    [Parameter]
    private String myvalue { get; set; }

    Boolean status;

    void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            surveys = (surveys + "," + newTodo);
            newTodo = string.Empty;

        }
    }

    void Addemail()
    {
        if (!string.IsNullOrWhiteSpace(newemail))
        {
            Emails.Add(new EmailItem { Title = newemail });
            emails = (emails + "," + newemail);
            Console.WriteLine(emails);
            newemail = string.Empty;

        }
    }

    public async void sendsurvey()
    {
        string str = surveys.Substring(1);
        string str1 = emails.Substring(1);

        // string body = (myvalue + ":" + str+":"+str1);
        string body = (myvalue + ":" + str+":"+str1);
        Console.WriteLine(body);
        status = await Http.SendJsonAsync<Boolean>(HttpMethod.Post, "/api/Login/sendsurvey", body);

    }

    public void back()
    {

        UriHelper.NavigateTo($"/login/{myvalue}");
    }
    public async void Sendingsurvey() {

        count = 5;
        String way = (myvalue + ":" + count);


        test = await Http.SendJsonAsync<Boolean>(HttpMethod.Post, "/api/Login/decreasemoney", way);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591

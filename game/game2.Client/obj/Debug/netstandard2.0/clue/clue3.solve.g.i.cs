#pragma checksum "C:\GitRepository\Webassembly\Game\WebAssembly\game\game2.Client\clue\clue3.solve.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e1948026ad284660677042a8f2f8550976e9b559"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace game2.Client.clue
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using game2.Client;
    using game2.Shared;
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/clue3/{myvalue}")]
    public class clue3_solve : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 105 "C:\GitRepository\Webassembly\Game\WebAssembly\game\game2.Client\clue\clue3.solve.cshtml"
           

    Game game;
    [Parameter]
    private String myvalue { get; set; }

    protected override async Task OnInitAsync()
    {
        game = await Http.SendJsonAsync<Game>(HttpMethod.Post, "/api/Game/getclue", myvalue);

    }

    String word;
    Boolean to = true;
    Boolean from;
    Boolean by;
    int count = 3;
    public void check()
    {
        Console.WriteLine(myvalue);
        if (word == "2000")
        {
            to = false;
            from = true;

        }
        else
        {

            if (count <= 1)
            {
                to = false;
                by = true;
            }
            else
            {
                count = count - 1;
            }
        }


    }

    public async void back()
    {
        String body = (myvalue + ":3");
        await Http.SendJsonAsync(HttpMethod.Post, "/api/Game/changestatus", body);

        UriHelper.NavigateTo($"/choose/{myvalue}");

    }
    public async void backf()
    {


        UriHelper.NavigateTo($"/choose/{myvalue}");

    }

    public void guess()
    {

        UriHelper.NavigateTo($"/guess/{myvalue}");
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591

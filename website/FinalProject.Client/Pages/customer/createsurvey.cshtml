@using FinalProject.Shared;
@page "/create/{myvalue}"
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject HttpClient Http
@*<div style="background-color:darkseagreen">*@
<div class="body1">
<center>
    <br><br>
    <div class="col-sm-6">

        <div class="container center">
            <h5 style="color:white">Create survey</h5>


            <ul>
                @foreach (var todo in todos)
                {
                    <ul style="color : white">@todo.Title</ul>
                }
            </ul>


            <input style="color:white" placeholder="Something todo" bind="@newTodo" />
            <button class="btn waves-effect waves-light" onclick="@AddTodo">Add</button>
 
            
        </div>
        <div class="container">

            <h5 style="color:white">Put your game link here</h5>

            <ul>
                @foreach (var todo in Emails)
                {
                    <ul style="color : blue">@todo.Title</ul>

                }
            </ul>

            <input style="color:white" placeholder="Something todo" bind="@newemail" />
            <br>
            <button class="btn waves-effect waves-light" onclick="@Addemail">Add todo</button>
            <br>
            <br>
            <button class="btn waves-effect waves-light" onclick="@sendsurvey">Create survey</button>
            &nbsp; &nbsp;
            <button class="btn waves-effect waves-light" onclick="@Sendingsurvey">Send Survey</button>
            <br>
            <br>
            <button class="btn waves-effect waves-light" onclick="@back">Back</button>

        </div>

    </div>
</center>
    </div>
@*</div>*@
@functions {

    public class TodoItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }
    IList<TodoItem> todos = new List<TodoItem>();

    public class EmailItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }
    IList<EmailItem> Emails = new List<EmailItem>();

    string newTodo;
    string newemail;
    string surveys;
    string emails;
    int count;
    User user;
    Boolean test;

    [Parameter]
    private String myvalue { get; set; }

    Boolean status;

    void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            surveys = (surveys + "," + newTodo);
            newTodo = string.Empty;

        }
    }

    void Addemail()
    {
        if (!string.IsNullOrWhiteSpace(newemail))
        {
            Emails.Add(new EmailItem { Title = newemail });
            emails = (emails + "," + newemail);
            Console.WriteLine(emails);
            newemail = string.Empty;

        }
    }

    public async void sendsurvey()
    {
        string str = surveys.Substring(1);
        string str1 = emails.Substring(1);

        // string body = (myvalue + ":" + str+":"+str1);
        string body = (myvalue + ":" + str+":"+str1);
        Console.WriteLine(body);
        status = await Http.SendJsonAsync<Boolean>(HttpMethod.Post, "/api/Login/sendsurvey", body);

    }

    public void back()
    {

        UriHelper.NavigateTo($"/login/{myvalue}");
    }
    public async void Sendingsurvey() {

        count = 5;
        String way = (myvalue + ":" + count);


        test = await Http.SendJsonAsync<Boolean>(HttpMethod.Post, "/api/Login/decreasemoney", way);
    }
}

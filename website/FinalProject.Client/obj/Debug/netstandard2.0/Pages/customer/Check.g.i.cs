#pragma checksum "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ec8b9dc68422065122cf366544e4e68cb28beae"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FinalProject.Client.Pages.customer
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using FinalProject.Client;
    using FinalProject.Shared;
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/check/{myvalue}")]
    public class Check : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 80 "C:\GitRepository\Webassembly\Game\WebAssembly\website\FinalProject.Client\Pages\customer\Check.cshtml"
 
    [Parameter]
    private String myvalue { get; set; }

    User user;
    User userok;
    Boolean to = true;
    Boolean from = false;
    String[] items;
    Random random = new Random();
    double newrand;
    protected override async Task OnInitAsync()
    {
        user = await Http.SendJsonAsync<User>(HttpMethod.Post, "/api/Login/getspeuser", myvalue);
        Console.WriteLine("!!!" + user.Survey);

    }
    public async void change()
    {
        int randint = random.Next(7, 8);

        newrand = (double)33 / randint;

        items = await Http.SendJsonAsync<String[]>(HttpMethod.Post, "/api/Login/getsurveylist", myvalue); ;
        to = false;
        from = true;

    }

    public void Convert()
    {

        int randint = random.Next(7, 19);

        newrand = (double)33 / randint;
    }
    public void back() {

        UriHelper.NavigateTo($"/login/{myvalue}");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591

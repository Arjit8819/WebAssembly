#pragma checksum "C:\GitRepository\Webassembly\Game\WebAssembly\game\game2.Client\Pages\first.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2b0f16aff46563c8c98fd15ad0cc33abff396bff"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace game2.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using game2.Client;
    using game2.Shared;
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class first : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 80 "C:\GitRepository\Webassembly\Game\WebAssembly\game\game2.Client\Pages\first.cshtml"
           

    String name;
    Boolean test;
    Boolean to = true;
    Boolean from;
    Boolean by;
    Boolean home1;
    int glasscount = 0;
    String glassString;

    public void move()
    {

        UriHelper.NavigateTo($"/main/{name}");
    }

    public async void Proceed()
    {
        to = false;
        from = true;

        String body = (name + ":name");
        test = await Http.SendJsonAsync<Boolean>(HttpMethod.Post, "/api/Game/SignUp", name);

    }

    public async void getglass()
    {
        if (glasscount < 1)
        {
            glasscount++;
            String body = (name + ":glass");
            await Http.SendJsonAsync(HttpMethod.Post, "/api/Game/putclue", body);

        }
        else {
            glassString = "Glass already taken";
        }
    }

    public void home()
    {
        from = false;
        home1 = true;

    }
    public void backnick()
    {
        home1 = false;
        to = true;

    }
    public void scene()
    {
        from = false;
        by = true;

    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591
